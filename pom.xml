<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.le.matrixframework</groupId>
  <artifactId>matrix-parent-dependencies</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>matrix-facade</module>
    <module>matrix-starter-service</module>
    <module>matrix-starter-web</module>
    <module>matrix-starter-parent</module>
  </modules>
  <packaging>pom</packaging>

  <name>matrix-parent-dependencies</name>
  <url>http://maven.apache.org</url>

  <description>
    管理matrix平台基础配置
  </description>
  <organization>
    <name>LeCloud Software, Inc.</name>
    <url>http://lecloud.com/</url>
  </organization>
  <scm>
    <url>http://git.letv.cn/le_matrix/matrix-parent-dependencies.git</url>
  </scm>
  <prerequisites>
    <!--maven版本限制-->
    <maven>3.0.0</maven>
  </prerequisites>
  <developers>
    <developer>
      <id>linzhanbo</id>
      <name>linzhanbo</name>
      <email>linzhanbo@le.com</email>
      <organization>LeCloud Software, Inc.</organization>
      <organizationUrl>http://lecloud.com/</organizationUrl>
      <roles>
        <role>Project lead</role>
      </roles>
    </developer>
    <developer>
      <id>lisuxiao</id>
      <name>lisuxiao</name>
      <email>lisuxiao@letv.com</email>
      <organization>LeCloud Software, Inc.</organization>
      <organizationUrl>http://lecloud.com/</organizationUrl>
      <roles>
        <role>Project lead</role>
      </roles>
    </developer>
  </developers>

  <properties>
    <!--框架编码-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!--spring-->
    <org.springframework.version>3.1.0.RELEASE</org.springframework.version>
    <!--springmvc-->
    <org.springframework.springmvc.version>3.1.0.RELEASE</org.springframework.springmvc.version>
    <!--Dubbo-->
    <dubbo.version>2.8.4</dubbo.version>
    <zookeeper.version>3.4.6</zookeeper.version>
    <zkclient.version>0.7</zkclient.version>
    <!--validate-->
    <validation-api.version>1.0.0.GA</validation-api.version>
    <hibernate-validator.version>4.2.0.Final</hibernate-validator.version>
    <resteasy-hibernatevalidator.version>2.3.1.GA</resteasy-hibernatevalidator.version>
    <!--c3p0-->
    <c3p0.version>0.9.1.2</c3p0.version>
    <!--druid-->
    <druid.version>0.2.23</druid.version>
    <!--MySQL-->
    <mysql.version>5.1.18</mysql.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <!--logback start-->
      <!-- logback+slf4j -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.5</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.0.13</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-access</artifactId>
        <version>1.0.13</version>
      </dependency>
      <!-- Log4j转换为slf4j -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>1.7.5</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>1.7.5</version>
      </dependency>
      <!--logback end-->
      <!-- Dubbo start -->
      <!--dubbox编译的最新2.8.4 dubbo版本-->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>dubbo</artifactId>
        <version>${dubbo.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>spring</artifactId>
            <groupId>org.springframework</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.101tec</groupId>
        <artifactId>zkclient</artifactId>
        <version>${zkclient.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- Dubbo end -->
      <!--Dubbox REST风格远程调用 start-->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs</artifactId>
        <version>3.0.7.Final</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-client</artifactId>
        <version>3.0.7.Final</version>
      </dependency>
      <!--后面数据校验会引入-->
      <!--Dubbox 如果要使用json序列化 -->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jackson-provider</artifactId>
        <version>3.0.7.Final</version>
      </dependency>
      <!--Dubbox restful需要-->
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>2.0</version>
      </dependency>
      <!--Dubbox 如果要使用xml序列化 -->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxb-provider</artifactId>
        <version>3.0.7.Final</version>
      </dependency>
      <!--Dubbox 如果要使用netty server -->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-netty</artifactId>
        <version>3.0.7.Final</version>
      </dependency>
      <!--Dubbox 如果要使用Sun HTTP server -->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jdk-http</artifactId>
        <version>3.0.7.Final</version>
      </dependency>
      <!--Dubbox 如果要使用tomcat server -->
      <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-core</artifactId>
        <version>8.0.11</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-logging-juli</artifactId>
        <version>8.0.11</version>
      </dependency>
      <!--Dubbox REST风格远程调用 end-->
      <!--Dubbox Kyro序列化 begin-->
      <dependency>
        <groupId>com.esotericsoftware.kryo</groupId>
        <artifactId>kryo</artifactId>
        <version>2.24.0</version>
      </dependency>
      <dependency>
        <groupId>de.javakaffee</groupId>
        <artifactId>kryo-serializers</artifactId>
        <version>0.26</version>
      </dependency>
      <!--Dubbox Kyro序列化 end-->
      <!--Dubbox FST序列化 begin-->
      <dependency>
        <groupId>de.ruedigermoeller</groupId>
        <artifactId>fst</artifactId>
        <version>1.55</version>
      </dependency>
      <!--Dubbox FST序列化 end-->
      <!--Dubbox Jackson序列化 begin-->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>2.3.3</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.3.3</version>
      </dependency>
      <!--Dubbox Jackson序列化 end-->
      <!--数据校验  begin-->
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>${validation-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate-validator.version}</version>
      </dependency>
      <!--为resteasy添加hibernate validate数据校验-->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-hibernatevalidator-provider</artifactId>
        <version>${resteasy-hibernatevalidator.version}</version>
      </dependency>
      <!--数据校验  end-->
      <!-- Spring begin -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aspects</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <!-- 对JDBC的简单封装 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <!--  为简化JMS API的使用而作的简单封装 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jms</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <!-- 整合第三方的ORM框架，如hibernate,ibatis,jdo，以及 spring的JPA实现 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <!--  Spring 对Object/XMl的映射支持,可以让Java与XML之间来回切换 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <!--对Junit等测试框架的简单封装-->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <!--为JDBC、Hibernate、JDO、JPA等提供的一致的声明式和编程式事务管理-->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <!-- spring mvc  start -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${org.springframework.springmvc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${org.springframework.springmvc.version}</version>
      </dependency>
      <!-- spring mvc  end -->
      <!-- org.aspectj  Aop需要-->
      <dependency>
        <groupId> org.aspectj</groupId >
        <artifactId>aspectjweaver</artifactId >
        <version> 1.6.11</version >
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>1.6.10</version>
      </dependency>
      <dependency>
        <groupId>aopalliance</groupId>
        <artifactId>aopalliance</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>2.2.2</version>
      </dependency>
      <!-- Spring end -->
      <!-- MyBatis begin -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>3.1.1</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>1.1.1</version>
      </dependency>
      <!-- MyBatis end -->
      <!--c3p0连接池 begin-->
      <dependency>
        <groupId>c3p0</groupId>
        <artifactId>c3p0</artifactId>
        <version>${c3p0.version}</version>
        <scope>compile</scope>
      </dependency>
      <!--c3p0连接池 end-->
      <!--druid连接池 begin-->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
      </dependency>
      <!--druid连接池 end-->
      <!--MySQL begin-->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>
      <!--MySQL end-->
      <!-- JSON start-->
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>1.9.13</version>
      </dependency>
      <!-- JSON end-->
      <!-- 上传组件包 begin-->
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.3.1</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.9</version>
      </dependency>
      <dependency>
        <groupId>commons-pool</groupId>
        <artifactId>commons-pool</artifactId>
        <version>1.6</version>
      </dependency>
      <!-- 上传组件包 end-->
      <!--jetty begin-->
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jsp-2.1-jetty</artifactId>
        <version>6.1.15</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.el</groupId>
        <artifactId>javax.el-api</artifactId>
        <version>3.0.1-b04</version>
        <scope>provided</scope>
      </dependency>
      <!--jetty end-->
      <!--百度disconf begin-->
      <dependency>
        <groupId>com.baidu.disconf</groupId>
        <artifactId>disconf-client</artifactId>
        <version>2.6.35</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.1</version>
      </dependency>
      <!--百度disconf end-->
      <!--matrix common begin-->
      <dependency>
        <groupId>com.le.matrixframework</groupId>
        <artifactId>matrix-common-core</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <!--matrix common end-->
      <!--matrix common service begin-->
      <dependency>
        <groupId>com.le.matrixframework</groupId>
        <artifactId>matrix-common-service</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <!--matrix common service end-->
      <!--matrix common web begin-->
      <dependency>
        <groupId>com.le.matrixframework</groupId>
        <artifactId>matrix-common-web</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <!--matrix common web end-->
    </dependencies>

  </dependencyManagement>
  <build>
    <plugins>
      <!--jdk版本>=1.7-->
      <!--dubbox 需要在JDK 1.7以上运行-->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!--<plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.2-beta-5</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.8</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.3.2</version>
        </plugin>-->
      </plugins>
    </pluginManagement>
  </build>
  <!--私有仓库配置  begin-->
  <repositories>
    <!--私有仓库 url-->
    <repository>
      <id>Matrix-Thirdparty repository</id>
      <name>Letv.com Repository</name>
      <url>http://maven.letv.cn/nexus/content/repositories/Matrix-Thirdparty/</url>
    </repository>
    <repository>
      <id>Matrix-Snapshot repository</id>
      <name>Letv.com Repository</name>
      <url>http://maven.letv.cn/nexus/content/repositories/Matrix-Snapshot/</url>
    </repository>
    <repository>
      <id>Matrix-Release repository</id>
      <name>Letv.com Repository</name>
      <url>http://maven.letv.cn/nexus/content/repositories/Matrix-Release/</url>
    </repository>
    <repository>
      <id>letv.public repository</id>
      <name>Letv.com Repository</name>
      <url>http://maven.letv.cn/nexus/content/groups/public/</url>
    </repository>
  </repositories>
  <!--私有仓库配置  end-->
  <!--私有插件配置 begin-->
  <pluginRepositories>
    <!--私有仓库插件 url-->
    <pluginRepository>
      <id>letv.public plugin</id>
      <name>Letv.com Repository</name>
      <url>http://maven.letv.cn/nexus/content/groups/public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  <!--deploy begin-->
  <distributionManagement>
    <!--deploy url-->
    <repository>
      <id>project-release</id>
      <name>Projects Release repository</name>
      <url>http://maven.letv.cn/nexus/content/repositories/Matrix-Release/</url>
    </repository>
    <snapshotRepository>
      <id>project-snapshots</id>
      <name>Projects SnapShot repository</name>
      <url>http://maven.letv.cn/nexus/content/repositories/Matrix-Snapshot/</url>
    </snapshotRepository>
  </distributionManagement>
  <!--deploy end-->
</project>
